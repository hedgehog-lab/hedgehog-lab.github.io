(this["webpackJsonphedgehog-lab"]=this["webpackJsonphedgehog-lab"]||[]).push([[0],{211:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(18),i=n.n(o),l=(n(92),n(93),n(12)),c=n(231),s=n(233),u=n(225),m=n(223),d=n(224),x=n(30),p=n(234),f=n(68),y=n.n(f),h=function(){return r.a.createElement("div",{style:{flexGrow:1},className:"header"},r.a.createElement(m.a,{position:"static",elevation:0,color:"default"},r.a.createElement(d.a,null,r.a.createElement(x.a,{variant:"h6",style:{flexGrow:1,display:"flex",alignItems:"center"}},r.a.createElement("img",{src:"/cat.png",style:{height:"1.25rem"}}),"Hedgehog Lab"),r.a.createElement(p.a,{color:"inherit",style:{textTransform:"none"},onClick:function(){window.open("https://twitter.com/lidangzzz")}},r.a.createElement(y.a,{style:{cursor:"pointer",color:"#1976d2"}}),"Twitter"),r.a.createElement(p.a,{color:"inherit",style:{textTransform:"none",height:36},onClick:function(){window.open("https://github.com/lidangzzz/hedgehog-lab")}},r.a.createElement("img",{alt:"GitHub stars",src:"https://img.shields.io/github/stars/lidangzzz/hedgehog-lab?style=social"})))))},g=n(226),b=n(227),w=n(228),A=n(229),E=n(46),v=[{description:"Matrix",source:'\n//1. Initialize matrix with a 2D array. You could create a Mat object or use mat() wrapper function since they are basically the same\nlet a = mat([[1,2,3],[4,5,6],[7,8,9]]);\nprint("Matrix a is: \\n" + a);\n\n//2. You could also create an N-by-1 matrix with 1D array\nprint("Another matrix is: \\n" + mat([1,2,3,4]));\n\n//3. A matrix can be initialized by a string in CSV format\nlet b = csv2mat(`\n1,2\n3,4\n`);\nprint("Creating a matrix from csv: \\n" + b);\n\n//4. Also there are some useful built-in functions to create different kinds of matrix\nprint("Creating a 3-by-3 eye matrix:\\n" + eye(3));\nprint("Creating a random 2-by-3 matrix:\\n" + random(2,3));\nprint("Creating a matrix of ones:\\n" + ones(2)); \nprint("Creating a matrix of zeros:\\n" + zeros(2)); \n\n//5. You can also create a sequence of number starting with 1 ending with 20 and increasing with step 3, then reshape it as a 3-by-3 matrix\nprint("Matrix c is:\\n" + range(1,20,3).reshape(3,3));\n'},{description:"Operators",source:'// Operator overloads are available for Mat class. \n// Right operator could be Mat object, 2D or 1D array or number\n\nlet A = mat([[1,2],[3,4]]);\nlet B = mat([[3,4],[5,6]]);\n\nprint("A+B=\\n" + (A+B));\nprint("A-B=\\n" + (A-B));\nprint("A*B=\\n" + (A*B));\nprint("A/B=\\n" + (A/B));\nprint("A^3=\\n" + (A^3));\nprint("A^(-1)=\\n" + (A^(-1)));\nprint("A + [[1,1],[1,1]]=\\n" + (A + [[1,1],[1,1]]));\n\n// If the right operands are scalar, operator will do element-wise operation (or "dot operation" in Matlab)\nprint("A+1=\\n" + (A+1));\nprint("A-1=\\n" + (A-1));\nprint("A*3=\\n" + (A*3));\nprint("A/2=\\n" + (A/2));\n\n// For element-wise multiplication (the same as A.*B in Matlab), use operator \'**\' instead\nprint("A**A=\\n" + (A**A))\n\n// and if the right operand of operator "**" is a number N, it will generate an element-wise \n// power of N to the left operand matrix (the same as A.^N in Matlab)\nprint("A**2=\\n" + A**2);\n\n// Also operator \'===\' can also be used to compare if two matrix are the same at element-wise\nlet A1 = mat([[1,2],[3,4]]);\nif (A1 === A) {\n    print("A1 equals to A");\n}\nelse {\n    print("A1 does not equal to A");\n}\n\n// Also you can use both of them as an expression in Matlab-style\nlet C = ( A.T()* B ) + ( B * 4 - A + 1 ) * ( B^(-1) );\nprint("Matrix C (A\'*B + (B*4 - A + 1) * (B^(-1)) is\\n" + C);\n'},{description:"GPU Acceleration",source:"//Create a 1000-by-1000 matrix\nvar x = random(1000,1000);\n\n// do a 1000*1000 matrix multiplication without GPU acceleration\nprint(\"Without GPU acceleration...\");\ntic();\nvar z1 = x*x;\ntoc();\n\n//set mode as 'gpu', which will enable GPU acceleration\nprint(\"With GPU acceleration...\");\ntic();\nx.mode = 'gpu'\nvar z2 = x*x;\ntoc();\n\n"},{description:"Built-in functions",source:"/*\nThere are many built-in functions which support matrix, including     \nsin, cos, abs, acos, acosh, sign, \nsqrt, trunc, floor, ceil, exp, log,\nasin, asinh, atan, atanh, tan, tanh,\npow, round\n*/\n\nlet A = mat([[1,2],[3,4]]);\n\n// Show the output matrix in fixed-point format with 5 digits\nA.digits = 5;\n\nprint(sin(A));\nprint(log(A));  // log A with base e\nprint(log(A,2));  // log A with base 2 \n\n//More functions are on the way...\n"},{description:"TeX in Hedgehog Lab",source:'let A = mat([[7,2],[2,1]]);\n\n// a short introduction\ntex("\\\\text{Cholesky decomposition is a classical matrix decomposition algorithm in this form:}")\nformulaTex("A=LL^{T},")\n\n\n// let\'s  calculate the cholesky now\nlet L = chol(A).L;\n\n// and keep 5 digits \nL.digits = 5\ntex("\\\\text{where A is a positive-definite and symmetric matrix.} \\\\\\\\ \\\\text{For example, we have } A = " + A.toTex() + "\\\\text{, and the decomposed matrix L is }" + L.toTex())\n'},{description:"Figures and plotting",source:"// generate 2D points as vectors of x and y \nlet x = range(-10,10,0.1);\nlet y = sin(x) + random(1,x.cols);\n\n// plot x and y as scatter \nplot2D(x.toArray(),y.toArray());  \n\n// ploy x and y as line\nplot2DLine(x.toArray(),y.toArray());   \n\n// generate 3D points as vectors of x, y and z\nlet size = 30;\nx = zeros(size);\nfor (let i=0;i<size;i++) {for (let j=0;j<size;j++){x.val[i][j] = i-size/2;}}\ny = x.T();\nlet z = x**2 + y**2;\n\n// plot x,y,z as scatter in 3D\nplot3D(x.toArray(),y.toArray(), z.toArray());\n\n// mesh of x,y,z \nplot3DMesh(x.toArray(),y.toArray(),z.toArray());\n\n/* For more advanced features and different kinds of charts, \n   please check the official website plotly.js https://plotly.com/javascript/\n   and use built-in function draw(data, layout) instead.\n*/\n\n/* For more advanced features and different kinds of charts, \n   please check the official website plotly.js https://plotly.com/javascript/\n   and use built-in function draw(data, layout) instead.\n*/\n// Example 1 of draw()\nlet z2 = z*(-1) + 300;\nlet z2_vec = z2.toArray();\n\ndraw([{x:x.toArray(), y: y.toArray(), z: z.toArray(), mode: 'markers',marker: {color: 'blue',size: 2}, opacity: 0.5,type: 'scatter3d'}, {x:x.toArray(), y: y.toArray(), z: z2.toArray(),mode: 'markers',marker: {color: 'red',size: 2}, opacity: 0.5,type: 'mesh3d'}],{title:\"Example 1 of draw()\"});\n\n\n\n// Example 2 of draw()\n\n// dataset group 1 \nlet x1 = random(1,20)*2 + 2;\nlet y1 = random(1,20)*3 + 3;\n\n// dataset group 2\nlet x2 = random(1,20)* 1.5 + 5;\nlet y2 = random(1,20)* 0.8 - 1;\n\n// dataset group 3\nlet x3 = random(1,30) * 1 - 1;\nlet y3 = random(1,30) * 3 + 2;\n\ndraw( \n[{x:x1.toArray(), y:y1.toArray(), mode:\"markers\"}, {x:x2.toArray(), y:y2.toArray(), mode:\"markers\"}, {x:x3.toArray(), y:y3.toArray(), mode:\"markers\"}], \n{shapes: [{type:'circle', xref:'x', yref:'y', x0 : x1.min(), y0:y1.min(), x1: x1.max(), y1: y1.max(), opacity: 0.2, fillcolor: \"green\"}, {type:'circle', xref:'x', yref:'y', x0 : x2.min(), y0:y2.min(), x1: x2.max(), y1: y2.max(), opacity: 0.2, fillcolor: \"blue\"}, {type:'circle', xref:'x', yref:'y', x0 : x3.min(), y0:y3.min(), x1: x3.max(), y1: y3.max(), opacity: 0.2, fillcolor: \"red\"}], title:\"Example 2 of draw(): cluster\"}\n);\n"},{description:"Symbolic computing",source:"//define symbol x\nlet x = sym('x')\n\n//write expression\nlet fx = ( x^2 ) + exp(x) + sin(x)\n\n//print f(x) \nformulaTex(`f(x) = ` + fx.toTex())\n\n//print f'(x)\nformulaTex(`f'(x) = ` + diff(fx,x).toTex())\n\n//print integrate of f(x)\nformulaTex(`\\\\int{f(x)dx} = ` + integrate(fx,x).toTex())\n\n\n//define g(x)\nlet gx = fx*fx + 1/fx + cos(x)\n\n//print g(x)\nformulaTex(`g(x) = ` + gx.toTex())\n\n//print g'(x)\nformulaTex(`g'(x) = ` + diff(gx,x).toTex())\n\n//print integrate of g(x)\nformulaTex(`\\\\int{g(x)dx} = ` + integrate(gx,x).toTex())\n\n//define another two symbols\nlet w = sym('w');\nlet y = sym('y');\n\n//write another expression\nlet W = (x^w) + sin(w+y) + (y^-2) + 1/w + log(cos(x) + sin(x))\n\n// W\nformulaTex(`W(x,y,w) = ` + W.toTex())\n\n// dW / dx\nformulaTex(`\\\\frac{dW(x,y,w)}{dx} = ` + diff(W,x).toTex());\n\n// dW / dy\nformulaTex(`\\\\frac{dW(x,y,w)}{dy} = ` + diff(W,y).toTex());\n\n// dW / dw\nformulaTex(`\\\\frac{dW(x,y,w)}{dw} = ` + diff(W,w).toTex());\n\n// integral W on x\nformulaTex(`\\\\int{W(x,y,w)dx} = ` + integrate(W,x).toTex());\n"},{description:"Markdown",source:"markdown(`\n# Hedgehog Lab Markdown Example\n\n## Plain Text \n\nThis is an example for **plain text** in [Hedgehog Lab](https://github.com/lidangzzz/hedgehog-lab)\n\n## Code Example\n\n\\`\\`\\`\nlet matrixA = mat([[1,2,3],[4,5,6],[7,8,9]]);\nlet matrixB = matrixA * matrixA.T();\nprint(matrixB);\n\\`\\`\\`\n\n## Table Features\n\n| Feature   | Support |\n| --------- | ------- |\n| tables    | \u2714 |\n| alignment | \u2714 |\n| wewt      | \u2714 |\n\n## Feel free to arrange any TeX, plotting and Markdown blocks in Hedgehog Lab!\n`)\n\nformulaTex(`A = ` + range(1,26).reshape(5,5).toTex())\n\nlet x = sym('x')\nlet fx = sin(x) + cos(x) + 1/x;\n\ntex(`\\\\text{Let's define a function in hedgehog lab as: }f(x) = ` + fx.toTex() + ` \\\\text{, and the derivative of the function is:}`);\nformulaTex(`f'(x) = ` + diff(fx,x).toTex());\n\nlet X = range(1,10,0.01);\nlet Y = sin(X);\nplot2DLine(X.toArray(), Y.toArray());\n\nmarkdown(`\n---------------\n\nThis document is created and maintained by Hedgehog Lab Community. The markdown feature is supported by [react-markdown](https://github.com/rexxars/react-markdown). Fork our project at [https://github.com/lidangzzz/hedgehog-lab](https://github.com/lidangzzz/hedgehog-lab)\n`)\n\n\n"}],z=function(e){var t=e.handleCompileAndRun,n=e.loading,a=e.setSource,o=e.handleLoadTutorial,i=e.source;return r.a.createElement(u.a,{item:!0,xs:12,md:6},r.a.createElement(g.a,{variant:"outlined",className:"your-code-card"},r.a.createElement(b.a,{action:r.a.createElement("div",{className:"run-button"},r.a.createElement(p.a,{id:"compile-and-run-button-id",variant:"contained",color:"primary",onClick:function(e){return t(e)},style:{textTransform:"none"},disabled:n},"Compile and run"),n&&r.a.createElement(w.a,{size:24,className:"run-button-loading"})),title:"Your code:"}),r.a.createElement(A.a,null,r.a.createElement(E.ControlledEditor,{height:"90vh",language:"javascript",value:i,onChange:function(e,t){a(t)},options:{wordWrap:"on",scrollBeyondLastLine:!1},editorDidMount:function(e,t){t.addAction({id:"compile-and-run-button-id",label:"compile-and-run-butt-label",keybindings:[2051],run:function(){var e;null===(e=document.getElementById("compile-and-run-button-id"))||void 0===e||e.click()}})}}))),r.a.createElement(s.a,{my:2},r.a.createElement(x.a,{variant:"h6",gutterBottom:!0},"Hedgehog Lab Tutorials:"),v.map((function(e,t){return r.a.createElement(s.a,{my:1},r.a.createElement(p.a,{key:"".concat(t,"-").concat(Date.now()),size:"small",style:{textTransform:"none"},variant:"contained",disableElevation:!0,onClick:function(e){return o(e,t)}},"Tutorial ",t+1,": ",e.description))}))))},T=n(236),k=n(72),L=n.n(k),C=n(71),W=n.n(C),j=n(69),B=n.n(j),M=n(28),F=n.n(M),S=n(70),O=n.n(S),D=function(e){return e.outputItemList.map((function(e){return e.isDraw()?r.a.createElement(B.a,{data:e.data,layout:e.layout}):e.isTex()?r.a.createElement(F.a.Provider,null,r.a.createElement("div",null,r.a.createElement(F.a.Node,{inline:!0,formula:e.text}))):e.isFormulaTex()?r.a.createElement(F.a.Provider,null,r.a.createElement("div",null,r.a.createElement(F.a.Node,{formula:e.text}))):e.isMarkdown()?r.a.createElement(O.a,{source:e.text}):r.a.createElement(r.a.Fragment,null)})).map((function(e,t){return r.a.createElement(r.a.Fragment,{key:t},e)}))},N=function(e){var t=e.executionOutputList,n=e.executionOutputString,a=e.loading;return r.a.createElement(u.a,{item:!0,xs:12,md:6},0===t.length&&""===n?r.a.createElement("div",{className:"no-code"},r.a.createElement("div",{className:"no-code-content"},a?r.a.createElement(w.a,{size:50,style:{color:"black"}}):document.body.clientWidth<960?r.a.createElement(W.a,{style:{fontSize:50}}):r.a.createElement(L.a,{style:{fontSize:50}}),r.a.createElement("p",null,a?"Loading...":"Please write your code on the ".concat(document.body.clientWidth<960?"top":"left"," and click the 'Compile and run' button")))):r.a.createElement(r.a.Fragment,null,r.a.createElement(x.a,{variant:"h5",gutterBottom:!0,className:"result-title"},"Results:"),t.length>0&&r.a.createElement("div",null,r.a.createElement(D,{outputItemList:t})),n&&r.a.createElement(T.a,{value:n,style:{fontFamily:"'Fira code', 'Fira Mono', Consolas, Menlo, Courier, monospace"},disabled:!0})))},I=n(230),H=function(){return r.a.createElement("div",null,r.a.createElement(x.a,null,r.a.createElement(I.a,{href:"https://github.com/lidangzzz/hedgehog-lab"},'Fork this repository at Github: https://github.com/lidangzzz/hedgehog-lab"'),r.a.createElement("br",null),r.a.createElement(I.a,{href:"https://twitter.com/lidangzzz"},"Follow my Twitter: @lidangzzz")))},P=n(78),G=n(47),Y=n.n(G),U=n(73),X=n(74),_=n.n(X),q=n(75),R=n.n(q),J=n(76),V=n(77),$=function(){function e(){Object(J.a)(this,e),this.outputType=void 0,this.text=void 0,this.data=void 0,this.layout=void 0}return Object(V.a)(e,[{key:"isPrint",value:function(){return"print"===this.outputType}},{key:"isDraw",value:function(){return"draw"===this.outputType}},{key:"isTex",value:function(){return"tex"===this.outputType}},{key:"isFormulaTex",value:function(){return"formulaTex"===this.outputType}},{key:"isMarkdown",value:function(){return"markdown"===this.outputType}}]),e}(),K=n(29),Q=K.b(new _.a).compile,Z=K.b(new R.a).output,ee=function(){var e=Object(U.a)(Y.a.mark((function e(t){var n,a,r,o,i;return Y.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("Hedgehog Lab: Start Compiling..."),e.prev=1,e.next=4,Q(t);case 4:return n=e.sent,e.next=7,Z(n);case 7:return a=e.sent,r=Object.create(new $),o=a.map((function(e){return e.__proto__=r,e})),i="",o.forEach((function(e){e.isPrint()&&(i+=e.text+"\n")})),e.abrupt("return",{outputString:i,outputItem:o});case 15:throw e.prev=15,e.t0=e.catch(1),console.log("Hedgehog Lab: Failed"),new Error(e.t0.message);case 19:case"end":return e.stop()}}),e,null,[[1,15]])})));return function(t){return e.apply(this,arguments)}}(),te=function(){var e=Object(a.useState)('//write your code here\nprint("hello world")\n'),t=Object(l.a)(e,2),n=t[0],o=t[1],i=Object(a.useState)({outputItem:[],outputString:""}),m=Object(l.a)(i,2),d=m[0],x=m[1],p=Object(P.a)(ee,{onSuccess:function(e){x(e)},onError:function(){console.log("Hedgehog Lab: Failed")}}),f=Object(l.a)(p,2),y=f[0],g=f[1].isLoading;return Object(a.useEffect)((function(){return function(){Q[K.a](),Z[K.a]()}}),[]),r.a.createElement("div",null,r.a.createElement("div",null,r.a.createElement(h,null),r.a.createElement(c.a,{maxWidth:"xl"},r.a.createElement(s.a,{my:4},r.a.createElement(u.a,{container:!0,spacing:3},r.a.createElement(z,{handleCompileAndRun:function(){x({outputItem:[],outputString:""}),y(n)},handleLoadTutorial:function(e,t){o(v[t].source),x({outputItem:[],outputString:""}),y(v[t].source)},setSource:o,source:n,loading:g}),r.a.createElement(N,{executionOutputList:d.outputItem,executionOutputString:d.outputString,loading:g})),r.a.createElement(H,null)))))},ne=function(){return r.a.createElement("div",{className:"App"},r.a.createElement(te,null))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(ne,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))},74:function(e,t,n){e.exports=function(){return new Worker(n.p+"d6ac8e4d4ddadf672ab9.worker.js")}},75:function(e,t,n){e.exports=function(){return new Worker(n.p+"c5e9bee817a687f42a11.worker.js")}},87:function(e,t,n){e.exports=n(211)},92:function(e,t,n){},93:function(e,t,n){}},[[87,1,2]]]);